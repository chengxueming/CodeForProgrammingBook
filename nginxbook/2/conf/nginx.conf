
user  cxm;
worker_processes  1;
daemon on;

#error_log  logs/error.log;
error_log  logs/error.log  debug;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
    debug_connection 114.244.133.72;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;
   
    upstream local {
      server 127.0.0.1:1313;
    }

    upstream qq_linux {
      server 152.136.229.135:80;
    }

    #10m什么意思，初始空间么？inactive=60m是 缓存60m？
    #打开缓存upstream看不到请求了
    proxy_cache_path /tmp/nginxcache levels=1:2 keys_zone=my_cache:10m max_size=10g inactive=60m use_temp_path=off;

    server {
	    listen 80;
	    server_name www.doc.com;
        location / {
            proxy_set_header X-Real-IP $remote_addr;
            proxy_cache my_cache;
            # 这个valid 一定要写 要不不生效。。。
            proxy_cache_valid 200 304 302 1d;
            proxy_cache_key $host$uri$is_args$args;
	        proxy_pass http://qq_linux;
        }
        location /test {
            if ( $request_uri ~* .*[^/]$ ) {
                    add_header  Content-Type 'text/plain; charset=utf-8';
                }
            alias /home/cxm/nginx/conf/;
            autoindex on;
       }

       location /conf {
        error_page 403 /403.jpeg;
        error_page 404 /404.png;
	    if ( $request_uri ~* .*[^/]$ ) {
                 add_header  Content-Type 'text/plain; charset=utf-8';
            }
	    root /home/cxm/nginx/;
	    #autoindex on;
       }

        location ~ ^/40.*$ {
            root   /home/cxm/CodeForProgrammingBook/nginxbook/static/;
        }

       location ~ ^/showconf/(\w+)\.(\w+)$ {
           add_header  Content-Type 'text/plain; charset=utf-8';
           alias /home/cxm/nginx/$2/$1.$2;
       }
    }
    gzip  on;
    server {
	listen 80;
	server_name www.test.com;
        keepalive_requests 5;
        keepalive_timeout 60;
        location / {
            add_header  Content-Type 'text/html; charset=utf-8';
	        return 200 "hit web test";
        }

        location ~ ^/test.*$ {
            add_header  Content-Type 'text/html; charset=utf-8';
	    return 200 "hit web test regex";
        }

        #location ^~ /test {
        #    add_header  Content-Type 'text/html; charset=utf-8';
	#    return 200 "hit web test prefix";
        #}

        location = /test {
            add_header  Content-Type 'text/html; charset=utf-8';
	    return 200 "hit web test part2";
        }
    }

    server {
	listen 80;
	server_name www.test2.com;
        location / {
            add_header  Content-Type 'text/html; charset=utf-8';
	    return 200 "hit web test2";
        }
    }

    server {
        listen       80;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            root   html;
            index  index.html index.htm;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
